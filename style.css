*, *::after, *::before{
    box-sizing: border-box;
}

/*making variable 'cell-size' for using its value repeatedily*/
:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)* .9);     /*mark of X or O will contain 90% of part of the container(i.e., cell*/

}

body{
    margin: 0;
}

.board{
    width: 100vh;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell{
    width: var(--cell-size);
    height:var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

/*removing the edges to look board more sexy ;)*/

/*removing top edge of cell 1(first child), 2 and 3*/
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}
/*removing left edge of cell 1, 4 and 7*/
.cell:nth-child(3n + 1){
    border-left: none;
}
/*removing right edge of cell 3, 6 and 9*/
.cell:nth-child(3n + 3){
    border-right: none;
}
/*removing bottom edge of cell 7, 8 and 9(last child*/
.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}
/*dont allow to put mark on occupied cell*/
.cell.x,
.cell.circle{
    cursor: not-allowed;
}
.cell.x::before,
.cell.x::after {
    background-color: black;
}
.cell.circle::before,
.cell.circle::after {
    background-color: black;
}
/*Hover effect*/
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    background-color: lightgrey;
}
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    background-color: lightgrey;
}
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size)* .7);
    height: calc(var(--mark-size)* .7);
    background-color: white;
}

.winning-message{
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover{
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show{
    display: flex;
}